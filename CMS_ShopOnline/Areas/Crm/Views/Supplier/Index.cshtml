@using CMS_ShopOnline.Areas.Crm.Models
@model IEnumerable<NhaCungCapViewModel>
@using GridMvc.Html
@using CMS_ShopOnline.Helpers
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/ACE_Layout.cshtml";
}
@if (ViewBag.SuccessMessage != null)
{
    <script>
        $(document).ready(function () {
	    'use strict';
		swal({
		title: 'Thông báo!!!',
		text: 'Thành công',
		type: 'success',
		button: {
			text: "Continue",
			value: true,
			visible: true,
			className: "btn btn-primary"
				}
		})
});

    </script>
}

@helper ButtonEdit(int Id)
{
    <a href="@Url.Action("Edit","Supplier",new { @Id = Id })">
        <button class="btn btn-primary" title="Chỉnh sửa" style="margin-left:-8px;margin-right:9px;" type="button">
            <i class="fas fa-pencil-alt"></i>
        </button>
    </a>
}
@helper ButtonDelete(int Id)
{
    <button class="btn btn-warning" title="Ngừng kinh doanh" style="margin:-2px" name="IdDelete" type="submit" value="@Id" onclick="return ConfirmDelete()"> <i class="fas fa-trash-alt"></i></button>
}
@helper Ma(int Id)
{
    <span>NCC @Id</span>
}
@helper Delete(bool? Status)
{
    if (Status == false)
    {
        
        <span class="badge badge-primary">Hoạt động</span>
    }
}
<div class="container-fluid" id="container-wrapper">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div style="display:flex;">
            <h1 class="h3 mb-0 text-gray-800">Nhà cung cấp</h1>
            <a href="@Url.Action("Create", "Supplier", new { area ="Crm" })">
                <button type="button" class="btn btn-primary" title="Thêm nhà cung cấp" style="margin-left:10px">
                    Thêm <i class="fa fa-plus-circle"></i>
                </button>
            </a>
        </div>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="./">Trang chủ</a></li>
            <li class="breadcrumb-item">Khách hàng</li>
            <li class="breadcrumb-item active" aria-current="page">Nhà cung cấp</li>
        </ol>
    </div>
    <div class="row">
        <div class="col-lg-12 mb-4">
            <!-- Simple Tables -->
            <div class="card">
                @using (Html.BeginForm("Index", "Supplier",FormMethod.Post))
                {
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <div class="col-md-8">
                            <div class="order-search" style="margin: 10px 0px; position: relative;">
                                @Html.TextBox("txtCode", Request["txtCode"], new { @class = "form-control ui-autocomplete-input", autocomplete = "off", placeholder = "Nhập tên nhà cung cấp..." })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-primary" type="submit">
                                <i class="fa fa-search"></i> Tìm kiếm
                            </button>
                        </div>
                    </div>
                }
                @using (Html.BeginForm("Delete", "Supplier", FormMethod.Post))
                {
                    <div class="table-responsive">
                        @Html.Grid(Model).Columns(columns =>
                   {
                       columns.Add().Titled("Mã").SetWidth(5).Sanitized(false).Encoded(false).RenderValueAs(x => Ma(x.Id));
                       columns.Add(x => x.Ten).Titled("Nhà cung cấp");
                       columns.Add(x => x.SDT).Titled("Số điện thoại");
                       columns.Add(x => x.Email).Titled("Email");
                       columns.Add(x => x.DiaChi).Titled("Địa Chỉ");
                       columns.Add().Titled("Trạng thái").Sanitized(false).Encoded(false).RenderValueAs(x=>Delete(x.IsDelete));
                       columns.Add().Titled("Tùy chỉnh").Css("text center")
                       .Encoded(false)
                       .Sanitized(false)
                       .SetWidth(100)
                       .RenderValueAs(x => (ButtonEdit(x.Id)).ToString() + (ButtonDelete(x.Id)).ToString());
                       
                   }).WithPaging(5)    
                    </div>
                }
            </div>
        </div>
    </div>
    <!--Row-->
</div>
<script>
    //function filterFunction() {
    //    var input, filter, ul, li, tr, i;
    //    input = document.getElementById("search-pro-box");
    //    filter = input.value.toUpperCase();
    //    div = document.getElementById("myproducts");
    //    tr = div.getElementsByTagName("tr");
    //    for (i = 0; i < tr.length; i++) {
    //        txtValue = tr[i].textContent || tr[i].innerText;
    //        if (txtValue.toUpperCase().indexOf(filter) > -1) {
    //            tr[i].style.display = "";

    //        } else {
    //            tr[i].style.display = "none";
    //        }
    //    }
    //}
    function Delete(id) {
        if (confirm('Bạn có chắc muốn xóa item đã chọn ?')) {
            $.post("@Url.Action("Delete", "Supplier", new { area = "Crm" })", 
            { Id: id })
            .done(function (data) {
                location.reload();
            });
            return false;
        }
        else {
            return false;
        }
    };
    function ConfirmDelete() {
        var x = confirm("Bạn có chắc muốn xóa item đã chọn ?");
        if (x)
            return true;
        else
            return false;
    }
</script>

