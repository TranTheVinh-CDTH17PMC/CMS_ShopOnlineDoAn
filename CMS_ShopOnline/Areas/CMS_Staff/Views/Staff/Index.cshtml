@using CMS_ShopOnline.Areas.CMS_Staff.Models
@model IEnumerable<NhanVienViewModel>
@using GridMvc.Html
@using CMS_ShopOnline.Helpers
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/ACE_Layout.cshtml";
}
@if (ViewBag.SuccessMessage != null)
{
    <script>
        $(document).ready(function () {
	    'use strict';
		swal({
		    title: 'Thành công!',
		    icon: 'success',
		    button:'Đồng ý',
		})
});

    </script>
}
@helper ButtonEdit(int Id)
{
    <a href="@Url.Action("Edit","Staff",new { @Id = Id })">
        <button class="btn btn-primary" title="Chỉnh sửa" style="margin-left:-8px;margin-right:9px;" type="button">
            <i class="fas fa-pencil-alt"></i>
        </button>
    </a>
}

@helper ButtonDelete(int Id, bool? Status)
{
    if (Status == true)
    {
            <button class="btn btn-warning" title="Mở khóa" style="margin:-2px;width:40px" name="IdDelete" type="submit" value="@Id" onclick="return ConfirmUnBlock()"> <i class="fa fa-unlock-alt"></i></button>
    }
    else
    {
            <button class="btn btn-warning" title="Khóa tài khoản" style="margin:-2px" name="IdDelete" type="submit" value="@Id" onclick="return ConfirmDelete()"> <i class="fas fa-trash-alt"></i></button>
    }
}
@helper Ma(int Id)
{
    <span>NV @Id</span>
}
@helper Delete(bool? Status)
{
    if (Status == false)
    {

        <span class="badge badge-primary">Đang làm việc</span>
    }
    else
    {
        <span class="badge badge-warning">Nghỉ việc</span>
    }
}
<div class="container-fluid" id="container-wrapper">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div style="display:flex">
            <h1 class="h3 mb-0 text-gray-800">Nhân viên</h1>
            <a href="@Url.Action("Create", "Staff", new { area ="CMS_Staff" })">
                <button type="button" class="btn btn-primary" title="Thêm nhân viên" style="margin-left:10px">
                    Thêm mới <i class="fa fa-plus"></i>
                </button>
            </a>
        </div>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="./">Trang chủ</a></li>
            <li class="breadcrumb-item">Nhân viên</li>
            <li class="breadcrumb-item active" aria-current="page">Nhân viên</li>
        </ol>
    </div>
    <div class="row">
        <div class="col-lg-12 mb-4">
            <!-- Simple Tables -->
            <div class="card">
                @using (Html.BeginForm("Index", "Staff", FormMethod.Post))
                {
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <div class="col-md-8">
                        <div class="order-search" style="margin: 10px 0px; position: relative;">
                            @Html.TextBox("txtInfo", Request["txtInfo"], new { @class = "form-control ui-autocomplete-input", autocomplete = "off", placeholder = "Nhập tên nhân viên hoặc số điện thoại..." })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select class="form-control" name="IdLoaiNV" id="IdLoaiNV">
                            <option value="">Tìm theo chức vụ</option>
                            @foreach (var item in ViewBag.LoaiNV)
                            {
                                <option value="@item.Id">@item.TenLoai</option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary" style="width: 8%;border: 1px solid grey;border-left: none;"><i class="fa fa-search"></i></button>
                </div>
                }
                @using (Html.BeginForm("Delete", "Staff", FormMethod.Post))
                {
                <div class="table-responsive">
                        @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add().Titled("Mã").SetWidth(5).Sanitized(false).Encoded(false).RenderValueAs(x => Ma(x.Id));
                        columns.Add(x => x.NgayTao).Sanitized(false).Titled("Ngày tạo").Format("{0:dd/MM/yyyy}");
                        columns.Add(x => x.TenNV).Titled("Tên nhân viên");                    
                        columns.Add(x => x.TenTaiKhoan).Titled("Tên tài khoản");
                        columns.Add(x => x.TenLoai).Titled("Chức vụ");
                        columns.Add(x => x.Email).Titled("Email");
                        columns.Add(x => x.DiaChi).Titled("Địa chỉ");
                        columns.Add(x => x.SDT).Titled("SĐT");
                        columns.Add(x => x.CMND).Titled("CMND");
                        columns.Add().Titled("Trạng thái").Sanitized(false).Encoded(false).RenderValueAs(x => Delete(x.IsDelete));
                        columns.Add().Titled("Tùy chỉnh").Css("text center")
                            .Encoded(false)
                            .Sanitized(false)
                            .SetWidth(100)
                            .RenderValueAs(x => (ButtonEdit(x.Id)).ToString() + (ButtonDelete(x.Id,x.IsDelete)).ToString());
                    }).WithPaging(5)
                </div>
                }
                <div class="card-footer"></div>
            </div>
        </div>
    </div>
    <!--Row-->
</div>
<script>
    function ConfirmDelete() {
        var x = confirm("Bạn có chắc muốn khóa nhân viên đã chọn ?");
        if (x)
            return true;
        else
            return false;
    }
    function ConfirmUnBlock() {
        var x = confirm("Bạn có chắc muốn mở khóa nhân viên đã chọn ?");
        if (x)
            return true;
        else
            return false;
    }
</script>

