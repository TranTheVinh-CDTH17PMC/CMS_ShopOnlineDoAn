@using CMS_ShopOnline.Areas.CMS_Sale.Models
@model IEnumerable<NguyenLieuViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/ACE_Layout.cshtml";
}
@using GridMvc.Html
<link href="/Assets/css/warehouse.css" rel="stylesheet" type="text/css" />
@if (ViewBag.SuccessMessage != null)
{
    <script>
        $(document).ready(function () {
	    'use strict';
	    swal({
	        title: 'Thành công!',
	        icon: 'success',
	        button: 'Đồng ý',
	    })

});

    </script>
}
@helper ButtonEdit(int Id)
{
    <a href="@Url.Action("Edit","Warehouse",new { @Id = Id })">
        <button class="btn btn-primary" title="Chỉnh sửa" style="margin-left:-8px;margin-right:9px;" type="button"><i class="fas fa-pencil-alt"></i></button>
    </a>
}
@helper ButtonDelete(int Id,bool? Status)
{
    if (Status == true)
    {
        <button class="btn btn-warning" title="Mở khóa" style="margin:-2px;width:40px" name="IdDelete" type="submit" value="@Id" onclick="return ConfirmUnBlock()"> <i class="fa fa-unlock-alt"></i></button>
    }
    else
    {
        <button class="btn btn-warning" title="Ngừng kinh doanh" style="margin:-2px" name="IdDelete" type="submit" value="@Id" onclick="return ConfirmDelete()"> <i class="fas fa-trash-alt"></i></button>
    }
}
@helper Ma(int Id)
{
    <span>NL @Id</span>
}
@helper Delete(bool? Status)
{
    if (Status == false)
    {
            <span class="badge badge-primary">Đang hoạt động</span>
    }
    else
    {
            <span class="badge badge-success">Đã tạm khóa</span>
    }
}
@helper Image(string img)
{
    if (img == null)
    {
            <img src="~/Areas/CMS_Sale/Image/NguyenLieu/noimage.gif" style="width:60px; height:60px">
    }
    else
    {
            <img src="~/Areas/CMS_Sale/Image/NguyenLieu/@img" style="width:60px; height:60px">
    }
}
@helper CheckDate(DateTime date)
{
    if (date == new DateTime(2010,10,10,1,1,1))
    {
        <span class="badge badge-warning">Khởi tạo</span>
    }
    else
    {
        @date.Date.ToString("dd/MM/yyyy")
    }
}
<div class="container-fluid" id="container-wrapper">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div style="display:flex;">
            <h1 class="h3 mb-0 text-gray-800">Nguyên liệu</h1>
            <a href="@Url.Action("Create", "Warehouse", new { area = "CMS_Sale" })">
                <button type="button" class="btn btn-primary" title="Thêm nguyên liệu" style="margin-left:10px">
                    Thêm mới <i class="fa fa-plus"></i>
                </button>
            </a>
        </div>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="./">Trang chủ</a></li>
            <li class="breadcrumb-item">Quản lý</li>
            <li class="breadcrumb-item active" aria-current="page">Kho hàng</li>
        </ol>
    </div>
    <!-- Sidebar -->
    @using (Html.BeginForm("Index", "Warehouse", FormMethod.Get))
    {
        <div class="tab">
            <h5 style="margin-left:20px;margin-top:20px;"><b>NGUYÊN LIỆU</b></h5>
            <hr class="sidebar-divider">
            <button class="tablinks" name="all" value="all" type="submit">Tất cả (@ViewBag.countAll)</button>
            <button class="tablinks" name="hangcon" value="hangcon" type="submit">Hàng còn trong kho (@ViewBag.countHangCon)</button>
            <button class="tablinks" name="tonkho" value="tonkho" type="submit">Tồn kho (@ViewBag.HangTonKho)</button>
            <button class="tablinks" name="saphethang" value="saphethang" type="submit">Sắp hết hàng (@ViewBag.countSapHetHang)</button>
            <button class="tablinks" name="hethang" value="hethang" type="submit">Hết hàng (@ViewBag.countHetHang)</button>
            @*<button class="tablinks" name="hethandung" value="hethandung" type="submit">Hết hạn dùng (@ViewBag.countHetHanDung)</button>*@
        </div>
    }
    <div class="row">
        <div class="col-lg-12 mb-4">
            <!-- Simple Tables -->
            <div class="card">
                @using (Html.BeginForm("Index", "Warehouse", FormMethod.Get))
                {
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <div class="col-md-12">
                            <div class="order-search" style="margin: 10px 0px; position: relative;display:flex">
                                <input type="text" class="form-control" placeholder="Nhập mã hoặc tên nguyên liệu..." id="search-pro-box" autocomplete="off" name="name">
                            </div>
                        </div>
                        
                    </div>
                    <div class="card-header d-flex flex-row align-items-center justify-content-between">
                        <div class="col-md-4">
                            <select class="form-control" name="idloai" id="idloai">
                                <option value="">Tìm theo loại</option>
                                @foreach (var item in ViewBag.loai)
                                {
                                    <option value="@item.Id">@item.Ten</option>
                                }
                            </select>
                        </div>
                        @*<div class="col-md-3">
                            <select class="form-control" name="iddvt" id="iddvt">
                                <option value="">Tìm theo ĐVT</option>
                                @foreach (var item in ViewBag.dvt)
                                {
                                    <option value="@item.Id">@item.Ten</option>
                                }
                            </select>
                        </div>*@
                        <div class="col-md-4">
                            <select class="form-control" name="IsDelete" id="IsDelete">
                                <option value="">Trạng thái</option>
                                    <option value="false">Đang hoạt động</option>
                                    <option value="true">Đã tạm khóa</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary" style="width: 8%;border: 1px solid grey;border-left: none;"><i class="fa fa-search"></i></button>
                        <button type="button" class="btn btn-primary" onclick="openpoupmy(false);"><i class="fa fa-file-pdf-o" style="font-size:16px"> PDF</i></button>
                        <button type="button" class="btn btn-primary" onclick="openpoupmy(true);"><i class="fa fa-file-excel-o" style="font-size:16px"> Excel</i></button>
                        </div>
                        }
                        @using (Html.BeginForm("Delete", "Warehouse", FormMethod.Post))
                {
                            <div class="table-responsive">
                                @Html.Grid(Model).Columns(columns =>
                   {
                       columns.Add().Titled("Tùy chỉnh").Css("text center")
                       .Encoded(false)
                       .Sanitized(false)
                       .SetWidth(100)
                       .RenderValueAs(x => (ButtonEdit(x.Id)).ToString() + (ButtonDelete(x.Id,x.IsDelete)).ToString());
                       columns.Add().Titled("Mã").SetWidth(5).Sanitized(false).Encoded(false).RenderValueAs(x => Ma(x.Id));
                       columns.Add().Encoded(false).Sanitized(false).Titled("Hình ảnh").RenderValueAs(x => Image(x.HinhAnh));
                       columns.Add().Sanitized(false).Encoded(false).Titled("Ngày nhập").Format("{0:dd/MM/yyyy}").RenderValueAs(x => CheckDate(x.NgayNhap));
                       columns.Add().Sanitized(false).Encoded(false).Titled("Ngày hết hạn").Format("{0:dd/MM/yyyy}").RenderValueAs(x => CheckDate(x.HSD));
                       columns.Add(x => x.Ten).Titled("Tên nguyên liệu");
                       columns.Add(x => x.TenDVT).Titled("ĐVT");
                       columns.Add(x => x.TenLoai).Titled("Loại");
                       columns.Add(x => x.SoLuongKho).Titled("SL kho").Sortable(true);
                       columns.Add(x => x.DonGia).Titled("Đơn giá nhập").Sortable(true).Css("money1");
                       columns.Add().Titled("Trạng thái").Sanitized(false).Encoded(false).RenderValueAs(x => Delete(x.IsDelete));
                   }).WithPaging(5)
                            </div>
                        }
                    </div>
        </div>
    </div>
</div>
<script>
    function openpoupmy(value) {
        var name = getUrlVars()["name"];
        var idloai = getUrlVars()["idloai"];
        var iddvt = getUrlVars()["iddvt"];
        var hangcon = getUrlVars()["hangcon"];
        var tonkho = getUrlVars()["tonkho"];
        var saphethang = getUrlVars()["saphethang"];
        var hethang = getUrlVars()["hethang"];
        var all = getUrlVars()["all"];
        newwindow = window.open('/CMS_Sale/Warehouse/Print?name=' + name + '&ExportExcel=' + value + '&idloai=' + idloai + '&iddvt=' + iddvt + '&hangcon=' + hangcon + '&tonkho=' + tonkho + '&saphethang=' + saphethang + '&hethang=' + hethang + '&all=' + all + '', 'print', 'height=500,width=500');
                setTimeout(function () {
                }, 500);
            }
    $(".tablinks").click(function () {
        $(this).siblings().removeClass('active')
        $(this).addClass('active');
    });
    function ConfirmDelete() {
        var x = confirm("Bạn có chắc muốn xóa item đã chọn ?");
        if (x)
            return true;
        else
            return false;
    }
    function ConfirmUnBlock() {
        var x = confirm("Bạn có chắc muốn mở khóa item đã chọn ?");
        if (x)
            return true;
        else
            return false;
    }
</script>